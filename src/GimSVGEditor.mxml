<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="1650" height="700" addedToStage="addToStage(event)"
					   fontFamily="Microsoft Yahei" showStatusBar="false">
	<fx:Script>
		<![CDATA[
			import com.SVGParser;
			import com.lorentz.SVG.display.SVGDocument;
			import com.lorentz.processing.ProcessExecutor;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			private var svg:SVGDocument;
			
			private var origXML:XML;
			private var curSelectedFloorId:String;
			private var curSelectedNodeId:String;
			private var curEditingNodeXML:XML;
			
			protected function addToStage(event:Event):void
			{
				nodesContainer.graphics.beginFill(0xFF0033,0);
				nodesContainer.graphics.drawRect(0,0,nodesContainer.width,nodesContainer.height);
				nodesContainer.graphics.endFill();
				
				ProcessExecutor.instance.initialize(stage);
				svg = new SVGDocument();
				svgContainer.addChild(svg);
			}
			
			protected function onLoadBtnClick(event:MouseEvent):void
			{
				var file:File = new File();
				file.browseForOpen("打开SVG文件"/*,[new FileFilter("SVG Files","*.svg")]*/);
				file.addEventListener(Event.SELECT,function(e:Event):void{
					var fs:FileStream = new FileStream();
					fs.open(file,FileMode.UPDATE);
					var origSVGString:String = fs.readUTFBytes(fs.bytesAvailable);
					fs.close();
					
					origXML = SVGParser.coverToAllPath(origSVGString);
					curSelectedNodeId = null;
					curSelectedFloorId = null;
					curEditingNodeXML = null;
					
					updateDisplay();
				});
			}
			
			private var isFloorIdChange:Boolean = false;
			private var isNodeIdChange:Boolean = false;
			
			protected function onFloorDropDownListChange(event:IndexChangeEvent):void
			{
				isFloorIdChange = true;
				
				curSelectedFloorId = floorIdsDropdownList.dataProvider.getItemAt(event.newIndex) as String;
				curEditingNodeXML = origXML.children().(@id == curSelectedFloorId)[0];
				curSelectedNodeId = null;
				
				updateDisplay();
			}
			
			protected function onNodeIdsListChange(event:IndexChangeEvent):void
			{
				isNodeIdChange = true;
				
				curSelectedNodeId = nodeIdsList.dataProvider.getItemAt(event.newIndex) as String;
				curEditingNodeXML = origXML.children().(@id == curSelectedFloorId).children().(@nodeId == curSelectedNodeId)[0];
				
				updateDisplay();
			}
			
			protected function onSaveBtnClick(event:MouseEvent):void
			{
				if(origXML)
				{
					var fileR:FileReference = new FileReference();
					var saveString:String = "<?xml version='1.0' encoding='utf-8'?>\n" +
					"<!-- Generator: GimSVGEditor 1.0.1 -->\n" +
					"<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>\n" +
					origXML.toXMLString();
					fileR.save(saveString,"data.sgxml");
				}
				else
				{
					Alert.show("你需要先加载一个SVG文件");
				}
			}
			
			protected function onInputChangee(event:TextOperationEvent):void
			{
				curEditingNodeXML.@nodeId = nodeIdInput.text;
				curEditingNodeXML.@nodeTypeId = nodeTypeIdInput.text;
				curEditingNodeXML.@bindNodeIds = bindNodeIdsInput.text;
				curEditingNodeXML.@bindShopId = bindShopIdInput.text;
				curEditingNodeXML.@nodePosition = nodePositionInput.text;
				curEditingNodeXML.@fill = fillInput.text;
				curEditingNodeXML.@deep = deepInput.text;
				curEditingNodeXML.@d = dInput.text;
				
				updateDisplay();
			}
			
			protected function onNodesContainerClick(event:MouseEvent):void
			{
				if(curSelectedFloorId)
				{
					var pathNodeXML:XML = SVGParser.generateNodeXML(event.localX,event.localY);
					origXML.children().(@id == curSelectedFloorId)[0].appendChild(pathNodeXML);
					curEditingNodeXML = origXML.children().(@id == curSelectedFloorId)[0];
					isReload = true;
					updateDisplay();
				}
			}
			
			private var isReload:Boolean = true;
			private var floorIds:Array;
			private var nodeIds:Array;
			private var nodes:Array;
			//根据XML数据显示当前选中的楼层,当前选中的区域,并添加NODES
			private function updateDisplay():void
			{
				if(isReload)
				{
					isReload = false;
					floorIds = [];
					nodeIds = [];
					nodes = [];
					
					for each(var floorXML:XML in origXML.children())
					{
						var floorId:String = floorXML.@id.toString();
						floorIds.push(floorId);
						for each(var pathXML:XML in floorXML.children())
						{
							var nodeId:String = pathXML.@nodeId.toString();
							if(!nodeIds[floorId]) nodeIds[floorId] = [];
							nodeIds[floorId].push(nodeId);
							
							if(!nodes[floorId]) nodes[floorId] = [];
							var node:Node = new Node();
							nodes[floorId].push(node);
							node.x = pathXML.@nodePosition.split(',')[0];
							node.y = pathXML.@nodePosition.split(',')[1];
						}
					}
					floorIdsDropdownList.dataProvider = new ArrayCollection(floorIds);
					curEditingNodeXML = null;
				}
				
				if(isFloorIdChange)
				{
					isFloorIdChange = false;
					nodeIdsList.dataProvider = new ArrayCollection(nodeIds[curSelectedFloorId]);
				}
				
				if(isNodeIdChange)
				{
					isNodeIdChange = false;
				}
				
				//inputs
				if(curEditingNodeXML)
				{
					svg.parse(curEditingNodeXML);
					if(curEditingNodeXML.hasSimpleContent())
					{
						nodeIdInput.text = curEditingNodeXML.@nodeId;
						nodeTypeIdInput.text = curEditingNodeXML.@nodeTypeId;
						bindNodeIdsInput.text = curEditingNodeXML.@bindNodeIds;
						bindShopIdInput.text = curEditingNodeXML.@bindShopId;
						nodePositionInput.text = curEditingNodeXML.@nodePosition;
						fillInput.text = curEditingNodeXML.@fill;
						deepInput.text = curEditingNodeXML.@deep;
						dInput.text = curEditingNodeXML.@d;
					}
					
				}
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:HGroup width="100%" height="100%" gap="0">
		<s:BorderContainer height="100%" width="240">
			<s:VGroup left="2" right="2" top="2" bottom="2" gap="0">
				<!--<s:Label text="载入与选择"/>-->
				<s:Button width="100%" label="载入SVG" click="onLoadBtnClick(event)"/>
				<s:DropDownList width="100%" id="floorIdsDropdownList" change="onFloorDropDownListChange(event)"/>
				<s:List id="nodeIdsList" width="100%" height="100%" change="onNodeIdsListChange(event)"/>
				<s:Button width="100%" label="保存SVG" click="onSaveBtnClick(event)"/>
			</s:VGroup>
		</s:BorderContainer>
		<s:BorderContainer height="100%" width="360">
			<s:VGroup left="2" right="2" top="2" bottom="2" gap="0">
				<!--<s:Label text="字段设置"/>-->
				<s:HGroup width="100%"><s:Label width="60" text="ID"/><s:TextInput id="nodeIdInput" change="onInputChangee(event)" width="100%" editable="false"/></s:HGroup>
				<s:HGroup width="100%"><s:Label width="60" text="类型"/><s:TextInput id="nodeTypeIdInput" change="onInputChangee(event)" width="100%"/></s:HGroup>
				<s:HGroup width="100%"><s:Label width="60" text="绑定"/><s:TextInput id="bindNodeIdsInput" change="onInputChangee(event)" width="100%"/></s:HGroup>
				<s:HGroup width="100%"><s:Label width="60" text="店铺"/><s:TextInput id="bindShopIdInput" change="onInputChangee(event)" width="100%"/></s:HGroup>
				<s:HGroup width="100%"><s:Label width="60" text="位置"/><s:TextInput id="nodePositionInput" change="onInputChangee(event)" width="100%"/></s:HGroup>
				<s:HGroup width="100%"><s:Label width="60" text="填充"/><s:TextInput id="fillInput" change="onInputChangee(event)" width="100%"/></s:HGroup>
				<s:HGroup width="100%"><s:Label width="60" text="深度"/><s:TextInput id="deepInput" change="onInputChangee(event)" width="100%"/></s:HGroup>
				<s:HGroup width="100%"><s:Label width="60" text="数据"/><s:TextInput id="dInput" change="onInputChangee(event)" width="100%"/></s:HGroup>
			</s:VGroup>
		</s:BorderContainer>
		<s:BorderContainer width="100%" height="100%">
			<s:Group id="canvas" width="100%" height="100%" clipAndEnableScrolling="true">
				<mx:UIComponent id="svgContainer" width="100%" height="100%"/>
				<mx:UIComponent id="nodesContainer" width="100%" height="100%" click="onNodesContainerClick(event)"/>
			</s:Group>
		</s:BorderContainer>
	</s:HGroup>
</s:WindowedApplication>
